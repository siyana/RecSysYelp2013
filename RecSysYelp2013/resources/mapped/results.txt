File name :preferences_1
user threshold: 0.05
svd: numFeatures: 2, lambda: 0.05, numIterations: 100)
svd++: numFeatures: 2, numIterations: 20
cold start decision: none

File name :preferences_2
user threshold: 0.05
svd: numFeatures: 2, lambda: 0.05, numIterations: 100)
svd++: numFeatures: 2, numIterations: 20
cold start decision: if item based is used, get item avg, else get user avg

File name: preferences_3
userBased: threshold: 0.1
svd: numFeatures: 2, lambda: 0.1, numIterations: 100
svd++: numFeatures: 2, numIterations: 10

File name: preferences_4
userBased: threshold: 0.025
svd: numFeatures: 2, lambda: 0.025, numIterations: 100
svd++: numFeatures: 2, numIterations: 30

File name: preferences_5
userBased: threshold: 0.2
svd: numFeatures: 2, lambda: 0.05, numIterations: 50
svd++: numFeatures: 3, numIterations: 20

File name: preferences_6
userBased: threshold: 0.25
svd: numFeatures: 2, lambda: 0.05, numIterations: 150
svd++: numFeatures: 3, numIterations: 30


File name: preferences_3_hybrid

userBased: threshold: 0.1

svd: numFeatures: 2, lambda: 0.1, numIterations: 100

svd++: numFeatures: 2, numIterations: 10

cold start decision: if item based is used, get item avg, else get user avg
hybrid: not weighted



File name: preferences_3_hybrid_weighted

userBased: threshold: 0.1

svd: numFeatures: 2, lambda: 0.1, numIterations: 100

svd++: numFeatures: 2, numIterations: 10

cold start decision: if item based is used, get item avg, else get user avg 

hybrid: weighted - 0.6*userBased + 0.4 * other